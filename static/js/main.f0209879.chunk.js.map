{"version":3,"sources":["components/Header.js","components/Footer.js","App.js","index.js"],"names":["Header","time","Date","getHours","getMinutes","getSeconds","Footer","today","getFullYear","App","useState","loginStatus","setLogin","employees","setEmployees","passwords","userName","setUserName","password","setPassword","verification","setVerification","useEffect","console","log","className","type","id","name","value","onChange","e","target","style","background","onClick","includes","length","alert","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+LAUeA,EAVA,SAAC,GAAQ,eACtB,IAAIC,EAAO,IAAIC,KACf,OACE,8BACG,kBACAD,EAAKE,WAFR,IAEqBF,EAAKG,aAF1B,KAE0CH,EAAKI,aAAc,QCQlDC,EAbA,SAAC,GAAQ,eACtB,IAAIC,EAAQ,IAAIL,KAChB,OACE,iCACE,8BACG,IACD,iDAFF,QAGUK,EAAMC,cAHhB,IAG+B,wECCtB,SAASC,IACtB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAoBC,EAApB,KAGA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAGA,GAHA,KAGgCL,mBAAS,KAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAgCP,mBAAS,IAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KACA,EAAwCT,oBAAS,GAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KASAC,qBAAU,WACRC,QAAQC,IAAIb,GACZY,QAAQC,IAAI,YAAaR,GACzBO,QAAQC,IAAI,QAASN,MAIvBI,qBAAU,WACRC,QAAQC,IAAIb,GACZY,QAAQC,IAAI,YAAaR,GACzBO,QAAQC,IAAI,QAASN,MAmDvB,OACE,iCACE,wBAAQO,UAAU,SAAlB,SACE,cAAC,EAAD,MAGF,gCACGF,QAAQC,IAAI,6BACZD,QAAQC,IAAI,kBAAmBb,IAC9BY,QAAQC,IAAI,wBAAyBX,GACtCA,GACKY,UAAY,MAAQF,QAAQC,IAAIX,KAChCY,UAAY,MAAQX,EAAa,GAAMS,QAAQC,IAAIX,IACzD,8CAAiBF,EAAjB,OACA,gDAAmBA,EAAnB,OACCY,QAAQC,IAAIb,GAEb,iCACE,2CACA,uBACEe,KAAK,OACLC,GAAG,mBACHC,KAAK,mBACLC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAYc,EAAEC,OAAOH,UAExC,gCACGN,QAAQC,IAAIX,GACb,gDACA,uBACEa,KAAK,OACLC,GAAG,mBACHC,KAAK,mBACLC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAYY,EAAEC,OAAOH,aAGzCN,QAAQC,IAAI,WAAYN,GApB3B,OAuBA,8BACE,yBAAQe,MAAO,CAAEC,WAAY,UAAYC,QAtEhC,WACfZ,QAAQC,IAAI,iBAAkBR,GAC9BO,QAAQC,IAAI,iBAAkBN,GAC9BK,QAAQC,IAAIb,GACZY,QAAQC,IAAIX,GAEZU,QAAQC,IAAIT,EAAUqB,SAASrB,IAC/BG,EAASmB,OAAS,GAAKC,MAAM,8BAGM,IAAjCtB,EAASoB,SAASvB,KACe,IAAjCK,EAASkB,SAASrB,IAElBuB,MAAM,qBAAD,OAAsBtB,IAC3BO,QAAQC,IAAR,mBACcR,EADd,wBACsCE,EADtC,4BACkEE,IAElER,GAAUD,GACRU,GAAgB,GAChBE,QAAQC,IAAIb,EAAaS,KAG3BkB,MAAM,aAAD,OAActB,EAAd,yBAAuCE,EAAvC,eACHG,GAAgB,GAChBE,QAAQC,IAAIJ,KA8CV,UACG,IADH,QAEQ,YAIZ,wBAAQK,UAAU,WAClB,cAAC,EAAD,OCnIN,IAAMc,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAClC,EAAD,MAEF8B,K","file":"static/js/main.f0209879.chunk.js","sourcesContent":["const Header = ({}) => {\n  var time = new Date();\n  return (\n    <p>\n      {\" Current Time: \"}\n      {time.getHours()}:{time.getMinutes()}::{time.getSeconds()}{\" \"}\n    </p>\n  );\n};\n\nexport default Header;\n","const Footer = ({}) => {\n  var today = new Date();\n  return (\n    <footer>\n      <p>\n        {\" \"}\n        <strike> Copyright </strike>\n        &copy; {today.getFullYear()} <div> Copyleft [allwrongs reserved] </div>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import \"./styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\n//<label for='credentials'> Enter Login Info: </label>\n// npm install -g json-server\n\nexport default function App() {\n  const [loginStatus, setLogin] = useState(false); // bool to set login\n\n  // for the database\n  const [employees, setEmployees] = useState([]);\n  const [passwords, setPasswords] = useState([]);\n\n  // to fetch user info on form\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [verification, setVerification] = useState(false);\n\n  // const onSubmit = (e) => {\n  //   console.log(e);\n  // };\n  // useEffect(()=> {\n  //   resp = await fetch(\"http://localhost:5000/accounts\").then();\n\n  // })\n  useEffect(() => {\n    console.log(loginStatus);\n    console.log(\"Employee \", userName);\n    console.log(\"Pass \", password);\n  });\n\n  // fetch all db upon page load and set login, pass and verification status.\n  useEffect(() => {\n    console.log(loginStatus);\n    console.log(\"Employee \", userName);\n    console.log(\"Pass \", password);\n    const fechUsers = async () => {\n      const resp = await fetch(\"http://localhost:5000/accounts\");\n      const loginData = await resp.json(); //.then((loginData) => {\n      console.log(loginData);\n      setEmployees(loginData.userName);\n      setPasswords(loginData.password);\n      setVerification(setVerification.status);\n      console.log(\n        `userName ${employees} \\n password ${passwords} \\n verification ${verification}`\n      );\n\n      if (resp && resp.data) {\n        // need to reframe this logic somehow\n        console.log(\"[DB]-- \\n\", resp.status);\n      } else {\n        console.log(\"[DB]-- Non 200 from DB: \\n\", resp.status);\n        alert(\"error in DB\", resp.status);\n      }\n    };\n  });\n\n  const onSubmit = () => {\n    console.log(\"username input\", userName);\n    console.log(\"password input\", password);\n    console.log(loginStatus);\n    console.log(employees);\n\n    console.log(passwords.includes(passwords));\n    password.length < 1 && alert(\"You Must Enter A Password\");\n\n    if (\n      userName.includes(employees) === true &&\n      password.includes(passwords) === true\n    ) {\n      alert(`sucessfull login, ${userName}`);\n      console.log(\n        `userName ${userName} \\n password ${password} \\n verification ${verification}`\n      );\n      setLogin(!loginStatus),\n        setVerification(true),\n        console.log(loginStatus, verification);\n      //setVerification(true)\n    } else {\n      alert(` username ${userName}, or password ${password} incorrect`),\n        setVerification(false),\n        console.log(verification);\n    }\n  };\n  //  {!employees &&\n\n  return (\n    <html>\n      <header className=\"header\">\n        <Header />\n      </header>\n\n      <div>\n        {console.log(\"the user name is adeldeep\")}\n        {console.log(\"Login Status \\n\", loginStatus)}\n        {(console.log(\"Current Employees \\n\"), employees)}\n        {employees\n          ? ((className = \"App\"), console.log(employees))\n          : ((className = \"App\"), setEmployees[\"2\"], console.log(employees))}\n        <h2> Login-Page {loginStatus} </h2>\n        <h4> Please Login {loginStatus} </h4>\n        {console.log(loginStatus)}\n\n        <form>\n          <label>User: </label>\n          <input\n            type=\"text\"\n            id=\"credentials-user\"\n            name=\"credentials-user\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n          />\n          <div>\n            {console.log(employees)}\n            <label> Password: </label>\n            <input\n              type=\"text\"\n              id=\"credentials-pass\"\n              name=\"credentials-pass\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          {console.log(\"password\", password)};\n        </form>\n\n        <div>\n          <button style={{ background: \"purple\" }} onClick={onSubmit}>\n            {\" \"}\n            Login{\" \"}\n          </button>\n        </div>\n      </div>\n      <footer className=\"footer\" />\n      <Footer />\n    </html>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}